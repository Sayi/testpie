// gradle 4.10
plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = 'com.deepoove'
version = '0.0.1'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.1'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.10.1'
    
    
    compileOnly "org.mockito:mockito-core:3.2.4"
    compileOnly "org.mockito:mockito-junit-jupiter:3.2.4"
    compileOnly "org.junit.jupiter:junit-jupiter-api:5.5.2"
    
    testImplementation "org.mockito:mockito-core:3.2.4"
    testImplementation "org.mockito:mockito-junit-jupiter:3.2.4"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.5.2"
    
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.5.2")
}

test {
    useJUnitPlatform()
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      groupId = project.group
      artifactId = 'testpie'
      version = project.version
      artifact sourcesJar
      artifact javadocJar
      from components.java
      pom {
          name = 'testpie'
          description = 'an unit test tool for load data and mock'
          url = 'http://maven.apache.org'
          licenses {
            license {
              name = 'The Apache License, Version 2.0'
              url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
          }
          developers {
            developer {
              name = 'Sayi'
              email = 'adasai90@gmail.com'
            }
          }
          scm {
            connection = 'scm:git:git@github.com:Sayi/testpie.git'
            developerConnection = 'scm:git:git@github.com:Sayi/testpie.git'
            url = 'git@github.com:Sayi/testpie.git'
          }
      }
    }
  }
  repositories {
    maven {
        def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
        def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
        url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        credentials {
            username "$mavenUser"
            password "$mavenPassword"
        } 
    }
  }
}

signing {
    useGpgCmd()
    sign publishing.publications.mavenJava
}
